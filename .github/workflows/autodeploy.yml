# This is a basic workflow to help you get started with Actions

name: autodeploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ autodeploy ]
  pull_request:
    branches: [ autodeploy ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    outputs:
        configuration: ${{ steps.branch-commit.outputs.configuration }}
        branch: ${{ steps.ec2.outputs.short_ref }}
        instance: ${{ steps.branch-commit.outputs.instance }}
        hosts: ${{ steps.branch-commit.outputs.hosts }}
        bucket: ${{ steps.branch-commit.outputs.bucket }}
        instance_data_value: ${{ steps.ec2.outputs.INSTANCE_DEV }} 
        run_frontend_jobs: ${{ steps.frontend.outputs.ui}}
        run_backend_jobs: ${{ steps.Backend.outputs.backend }}
        microservices: ${{ steps.microservice.outputs.microservices }}
        container : ${{ steps.microservice.outputs.featuremanager }} 
                ${{ steps.microservice.outputs.entitymanager }} 
                ${{ steps.microservice.outputs.flowmanager }} 
                ${{ steps.microservice.outputs.microflowmanager }} 
                ${{ steps.microservice.outputs.menubuildermanager }}
                ${{ steps.microservice.outputs.screenmanager }} 
                ${{ steps.microservice.outputs.securitymanager }} 
                ${{ steps.microservice.outputs.camundasvc }} 
                ${{ steps.microservice.outputs.Authproxy }}
                ${{ steps.microservice.outputs.templatemanager }} 
                ${{ steps.microservice.outputs.apigateway }} 
                ${{ steps.microservice.outputs.projectmanager }} 
                ${{ steps.microservice.outputs.deletemanager }}
                ${{ steps.microservice.outputs.githubmanager }} 
                ${{ steps.microservice.outputs.screengenmanager }} 
                ${{ steps.microservice.outputs.mongogenmanager }}
                ${{ steps.microservice.outputs.admingenmanager }}
                ${{ steps.microservice.outputs.nodegenmanager }}
                ${{ steps.microservice.outputs.datastoremanager }} 
                ${{ steps.microservice.outputs.inframanager }} 
                ${{ steps.microservice.outputs.generationmanager }} 
                ${{ steps.microservice.outputs.frontgenmanager }}
                ${{ steps.microservice.outputs.backendgenmanager }} 
                ${{ steps.microservice.outputs.angulargenmanager }} 
                ${{ steps.microservice.outputs.angtemplatemanager }} 
                ${{ steps.microservice.outputs.reactgenmanager }}
                ${{ steps.microservice.outputs.authgenmanager }}
                ${{ steps.microservice.outputs.codegenmanager }} 
                ${{ steps.microservice.outputs.ionicmanager }} 
                ${{ steps.microservice.outputs.swaggergenmanager }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! hi San

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
